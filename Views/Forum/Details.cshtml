@using GreenMeadowsPortal.ViewModels
@model TopicDetailsViewModel
@{
    ViewData["Title"] = Model.Title;
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
}

<div class="page-header">
    <h1>@Model.Title</h1>
    <nav class="breadcrumb">
        <a asp-controller="Dashboard" asp-action="@(Model.Role == "Admin" ? "AdminDashboard" : (Model.Role == "Staff" ? "StaffDashboard" : "HomeownerDashboard"))">Dashboard</a> /
        <a asp-controller="Forum" asp-action="Index">Community Forum</a> /
        Topic
    </nav>
</div>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
        <button class="close-alert"><i class="fas fa-times"></i></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
        <button class="close-alert"><i class="fas fa-times"></i></button>
    </div>
}

<!-- Topic Details -->
<div class="content-section">
    <div class="topic-header">
        <div class="topic-status">
            @if (Model.IsPinned)
            {
                <span class="topic-badge pinned" title="Pinned Topic">
                    <i class="fas fa-thumbtack"></i> Pinned
                </span>
            }
            @if (Model.IsClosed)
            {
                <span class="topic-badge closed" title="Closed Topic">
                    <i class="fas fa-lock"></i> Closed
                </span>
            }
        </div>

        <div class="topic-details">
            <div class="topic-stats">
                <span title="Views"><i class="fas fa-eye"></i> @Model.ViewCount @(Model.ViewCount == 1 ? "view" : "views")</span>
                <span title="Replies"><i class="fas fa-reply"></i> @Model.ReplyCount @(Model.ReplyCount == 1 ? "reply" : "replies")</span>
                <span title="Created Date"><i class="fas fa-calendar-alt"></i> @Model.CreatedDate.ToString("MMM dd, yyyy")</span>
            </div>

            <div class="topic-actions">
                @if (Model.CanModerate)
                {
                    <div class="dropdown">
                        <button class="btn small-btn dropdown-toggle" id="moderationDropdown">
                            <i class="fas fa-shield-alt"></i> Moderation <i class="fas fa-caret-down"></i>
                        </button>
                        <div class="dropdown-menu">
                            @if (Model.CanPin)
                            {
                                <form asp-action="TogglePinTopic" method="post" class="dropdown-item-form">
                                    <input type="hidden" name="topicId" value="@Model.Id" />
                                    <button type="submit" class="dropdown-item">
                                        @if (Model.IsPinned)
                                        {
                                            <i class="fas fa-thumbtack fa-rotate-270"></i>
                                            <text>Unpin Topic</text>
                                        }
                                        else
                                        {
                                            <i class="fas fa-thumbtack"></i>
                                            <text>Pin Topic</text>
                                        }
                                    </button>
                                </form>
                            }

                            @if (Model.CanClose)
                            {
                                <form asp-action="ToggleCloseTopic" method="post" class="dropdown-item-form">
                                    <input type="hidden" name="topicId" value="@Model.Id" />
                                    <button type="submit" class="dropdown-item">
                                        @if (Model.IsClosed)
                                        {
                                            <i class="fas fa-lock-open"></i>
                                            <text>Reopen Topic</text>
                                        }
                                        else
                                        {
                                            <i class="fas fa-lock"></i>
                                            <text>Close Topic</text>
                                        }
                                    </button>
                                </form>
                            }

                            <div class="dropdown-divider"></div>

                            <form asp-action="DeleteTopic" method="post" class="dropdown-item-form"
                                  onsubmit="return confirm('Are you sure you want to delete this topic? This action cannot be undone.')">
                                <input type="hidden" name="topicId" value="@Model.Id" />
                                <button type="submit" class="dropdown-item text-danger">
                                    <i class="fas fa-trash-alt"></i> Delete Topic
                                </button>
                            </form>
                        </div>
                    </div>
                }

                <button class="btn small-btn" id="reportTopicBtn" title="Report Inappropriate Content">
                    <i class="fas fa-flag"></i> Report
                </button>
            </div>
        </div>
    </div>

    <!-- Original Post -->
    <div class="post-container original-post" id="post-@Model.Id">
        <div class="post-author">
            <div class="author-avatar">
                <img src="@Model.AuthorProfileImage" alt="@Model.AuthorName Avatar">
            </div>
            <div class="author-info">
                <div class="author-name">@Model.AuthorName</div>
                <div class="author-role">@Model.AuthorRole</div>
            </div>
        </div>

        <div class="post-content">
            <div class="post-body">
                @Html.Raw(Model.Content.Replace("\n", "<br />"))
            </div>

            <div class="post-meta">
                <span class="post-date" title="@Model.CreatedDate.ToString("MMMM dd, yyyy h:mm tt")">
                    Posted on @Model.CreatedDate.ToString("MMM dd, yyyy h:mm tt")
                </span>
            </div>
        </div>
    </div>

    <!-- Replies -->
    @if (Model.Replies.Count > 0)
    {
        <div class="section-divider">
            <div class="divider-label">
                <i class="fas fa-reply"></i> @Model.ReplyCount @(Model.ReplyCount == 1 ? "Reply" : "Replies")
            </div>
            <hr />
        </div>

        <div class="replies-container">
            @foreach (var reply in Model.Replies)
            {
                <div class="post-container reply" id="reply-@reply.Id">
                    <div class="post-author">
                        <div class="author-avatar">
                            <img src="@reply.AuthorProfileImage" alt="@reply.AuthorName Avatar">
                        </div>
                        <div class="author-info">
                            <div class="author-name">@reply.AuthorName</div>
                            <div class="author-role">@reply.AuthorRole</div>
                        </div>
                    </div>

                    <div class="post-content">
                        <div class="post-body">
                            @if (reply.IsEditing)
                            {
                                <form asp-action="EditReply" method="post" class="edit-reply-form">
                                    <input type="hidden" name="replyId" value="@reply.Id" />
                                    <input type="hidden" name="topicId" value="@Model.Id" />

                                    <div class="form-group">
                                        <textarea name="content" class="form-control" rows="5">@reply.Content</textarea>
                                    </div>

                                    <div class="form-actions">
                                        <button type="button" class="btn cancel-edit-btn" data-reply-id="@reply.Id">Cancel</button>
                                        <button type="submit" class="btn primary-btn">Save Changes</button>
                                    </div>
                                </form>
                            }
                            else
                            {
                                @Html.Raw(reply.Content.Replace("\n", "<br />"))
                            }
                        </div>

                        <div class="post-meta">
                            <span class="post-date" title="@reply.CreatedDate.ToString("MMMM dd, yyyy h:mm tt")">
                                Posted on @reply.CreatedDate.ToString("MMM dd, yyyy h:mm tt")
                            </span>

                            @if (reply.EditedDate != null)
                            {
                                <span class="post-edited" title="@reply.EditedDate?.ToString("MMMM dd, yyyy h:mm tt")">
                                    (Edited @reply.EditedDate?.ToString("MMM dd, yyyy h:mm tt"))
                                </span>
                            }

                            <div class="post-actions">
                                @if (reply.CanEdit)
                                {
                                    <button class="btn action-btn edit-reply-btn" data-reply-id="@reply.Id">
                                        <i class="fas fa-edit"></i> Edit
                                    </button>
                                }

                                @if (reply.CanDelete)
                                {
                                    <form asp-action="DeleteReply" method="post" style="display:inline;">
                                        <input type="hidden" name="replyId" value="@reply.Id" />
                                        <input type="hidden" name="topicId" value="@Model.Id" />
                                        <button type="submit" class="btn action-btn delete-reply-btn"
                                                onclick="return confirm('Are you sure you want to delete this reply?')">
                                            <i class="fas fa-trash-alt"></i> Delete
                                        </button>
                                    </form>
                                }

                                <button class="btn action-btn report-reply-btn" data-reply-id="@reply.Id">
                                    <i class="fas fa-flag"></i> Report
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Reply Form -->
    @if (Model.CanReply)
    {
        <div class="section-divider">
            <div class="divider-label">
                <i class="fas fa-reply"></i> Post Reply
            </div>
            <hr />
        </div>

        <div class="reply-form-container">
            <form asp-action="Reply" method="post">
                <input type="hidden" name="topicId" value="@Model.Id" />

                <div class="form-group">
                    <textarea name="content" class="form-control" rows="5" placeholder="Write your reply here..." required></textarea>
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn primary-btn">Post Reply</button>
                </div>
            </form>
        </div>
    }
    else if (Model.IsClosed)
    {
        <div class="topic-closed-message">
            <i class="fas fa-lock"></i>
            <p>This topic is closed and no longer accepts replies.</p>
        </div>
    }
</div>

<!-- Report Modal -->
<div class="modal" id="reportModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><i class="fas fa-flag"></i> Report Content</h4>
                <button type="button" class="close-modal">&times;</button>
            </div>

            <div class="modal-body">
                <form asp-action="Report" method="post">
                    <input type="hidden" id="reportTopicId" name="TopicId" value="" />
                    <input type="hidden" id="reportReplyId" name="ReplyId" value="" />

                    <div class="form-group">
                        <label for="reason">Reason for reporting</label>
                        <textarea id="reason" name="Reason" class="form-control" rows="4"
                                  placeholder="Please explain why this content is inappropriate..." required></textarea>
                    </div>

                    <div class="form-actions">
                        <button type="button" class="btn cancel-report-btn">Cancel</button>
                        <button type="submit" class="btn primary-btn">Submit Report</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Moderation dropdown
            const dropdown = document.getElementById('moderationDropdown');
            if (dropdown) {
                dropdown.addEventListener('click', function() {
                    this.nextElementSibling.classList.toggle('show');
                });

                // Close dropdown when clicking outside
                document.addEventListener('click', function(event) {
                    if (!event.target.matches('#moderationDropdown') && !event.target.closest('#moderationDropdown')) {
                        const dropdownMenus = document.querySelectorAll('.dropdown-menu');
                        dropdownMenus.forEach(menu => {
                            if (menu.classList.contains('show')) {
                                menu.classList.remove('show');
                            }
                        });
                    }
                });
            }

            // Edit reply functionality
            const editButtons = document.querySelectorAll('.edit-reply-btn');
            editButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const replyId = this.getAttribute('data-reply-id');
                    const replyContainer = document.getElementById('reply-' + replyId);
                    const replyContent = replyContainer.querySelector('.post-body');
                    const replyText = replyContent.innerText.trim();

                    // Create edit form
                    const form = document.createElement('form');
                    form.setAttribute('action', '/Forum/EditReply');
                    form.setAttribute('method', 'post');
                    form.classList.add('edit-reply-form');

                    form.innerHTML = `
                        <input type="hidden" name="replyId" value="${replyId}" />
                        <input type="hidden" name="topicId" value="@Model.Id" />

                        <div class="form-group">
                            <textarea name="content" class="form-control" rows="5">${replyText}</textarea>
                        </div>

                        <div class="form-actions">
                            <button type="button" class="btn cancel-edit-btn" data-reply-id="${replyId}">Cancel</button>
                            <button type="submit" class="btn primary-btn">Save Changes</button>
                        </div>`;

                    // Replace content with form
                    replyContent.innerHTML = '';
                    replyContent.appendChild(form);

                    // Add event listener to cancel button
                    const cancelButton = form.querySelector('.cancel-edit-btn');
                    cancelButton.addEventListener('click', function() {
                        replyContent.innerHTML = replyText.replace(/\n/g, '<br />');
                    });
                });
            });

            // Report topic
            const reportTopicBtn = document.getElementById('reportTopicBtn');
            if (reportTopicBtn) {
                reportTopicBtn.addEventListener('click', function() {
                    const modal = document.getElementById('reportModal');
                    modal.style.display = 'block';
                    document.getElementById('reportTopicId').value = '@Model.Id';
                    document.getElementById('reportReplyId').value = '';
                });
            }

            // Report reply
            const reportReplyBtns = document.querySelectorAll('.report-reply-btn');
            reportReplyBtns.forEach(button => {
                button.addEventListener('click', function() {
                    const replyId = this.getAttribute('data-reply-id');
                    const modal = document.getElementById('reportModal');
                    modal.style.display = 'block';
                    document.getElementById('reportTopicId').value = '';
                    document.getElementById('reportReplyId').value = replyId;
                });
            });

            // Close modal
            const closeModal = document.querySelector('.close-modal');
            if (closeModal) {
                closeModal.addEventListener('click', function() {
                    const modal = document.getElementById('reportModal');
                    modal.style.display = 'none';
                });
            }

            // Cancel report button
            const cancelReportBtn = document.querySelector('.cancel-report-btn');
            if (cancelReportBtn) {
                cancelReportBtn.addEventListener('click', function() {
                    const modal = document.getElementById('reportModal');
                    modal.style.display = 'none';
                });
            }

            // Close modal when clicking outside
            window.addEventListener('click', function(event) {
                const modal = document.getElementById('reportModal');
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        });
    </script>
}